<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/confirmationStyle.css" />
    <title>Document</title>
    <style></style>
  </head>
  <body>
    <%- include('partials/header.ejs') -%>

    <div class="mainContainer">
      <div class="dataContainer">
        <form id="orderForm" action="#">
          <label for="name">Name</label>
          <input
            type="text"
            id="name"
            name="name"
            placeholder="Name"
            required
          />

          <label for="email">Email</label>
          <input
            type="email"
            id="email"
            name="email"
            placeholder="Email"
            required
          />

          <label for="city">City</label>
          <input
            type="text"
            id="city"
            name="city"
            placeholder="City"
            required
          />

          <label for="address">Address</label>
          <input
            type="text"
            id="address"
            name="address"
            placeholder="Address"
            required
          />

          <label for="phone">Phone Number</label>
          <input
            type="number"
            id="phone"
            name="phone"
            placeholder="Phone Number"
            required
          />
        </form>
      </div>
      <div class="checkContainer">
        <div class="checkTitle">
          <h2>CHECKOUT</h2>
        </div>

        <div class="checkoutItemContainer" id="checkoutItemContainer">
          <!-- Checkout items will be dynamically inserted here -->
        </div>

        <hr />

        <div class="totalContainer" id="totalContainer">
          <!-- Total amount will be dynamically inserted here -->
        </div>

        <div class="confirmButton">
          <a href="#" onclick="confirmOrder()">Confirm Order</a>
        </div>
        <div class="checkoutTriangles">
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
          <div class="arrow-up"></div>
        </div>
      </div>
    </div>

    <script>
      // Function to fetch cart items from local storage and display them
      function displayCheckoutItems() {
        var checkoutItemContainer = document.getElementById(
          "checkoutItemContainer"
        );
        var totalContainer = document.getElementById("totalContainer");
        var cartItems = JSON.parse(localStorage.getItem("cart")) || [];
        var totalAmount = 0;

        if (cartItems.length === 0) {
          checkoutItemContainer.innerHTML = "<p>Your cart is empty</p>";
          totalContainer.innerHTML = "";
          return;
        }

        checkoutItemContainer.innerHTML = ""; // Clear the container before adding items

        cartItems.forEach((item) => {
          var price = parseFloat(item.price);
          var quantity = parseInt(item.quantity, 10);
          var totalPrice = price * quantity;
          totalAmount += totalPrice;

          var checkoutItemBox = document.createElement("div");
          checkoutItemBox.className = "checkoutItemBox";

          checkoutItemBox.innerHTML = `
            <p>${item.name}</p>
            <p>${item.size}</p>
            <p>x${quantity}</p>
            <p>${totalPrice.toFixed(2)} EGP</p>
          `;
          checkoutItemContainer.appendChild(checkoutItemBox);
        });

        totalContainer.innerHTML = `<h4>TOTAL: ${totalAmount.toFixed(
          2
        )} EGP</h4>`;
      }

      // Function to confirm order
      function confirmOrder() {
        // Gather form data
        var form = document.getElementById("orderForm");
        var formData = new FormData(form);
        var orderData = {
          name: formData.get("name"),
          email: formData.get("email"),
          city: formData.get("city"),
          address: formData.get("address"),
          phoneNumber: formData.get("phone"),
          items: [],
          totalOrderPrice: 0,
          orderProgress: "Pending",
        };

        // Log the gathered form data for debugging
        console.log("Form Data:", orderData);

        // Fetch cart items from local storage
        var cartItems = JSON.parse(localStorage.getItem("cart")) || [];
        var totalAmount = 0;

        cartItems.forEach((item) => {
          var price = parseFloat(item.price);
          var quantity = parseInt(item.quantity, 10);
          var totalPrice = price * quantity;
          totalAmount += totalPrice;

          orderData.items.push({
            itemName: item.name,
            itemSize: item.size,
            itemQuantity: quantity,
            itemPrice: totalPrice.toFixed(2),
          });
        });

        orderData.totalOrderPrice = totalAmount.toFixed(2);

        // Log the complete order data for debugging
        console.log("Order Data:", orderData);

        // Send order data to backend
        fetch("http://localhost:3000/orderBCK", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(orderData),
        })
          .then((response) => response.json())
          .then((data) => {
            console.log("Order confirmed:", data);
            alert("Order confirmed!");
            // Optionally, clear cart and form
            localStorage.removeItem("cart");
            form.reset();
            displayCheckoutItems(); // Update the checkout display
          })
          .catch((error) => {
            console.error("Error:", error);
            alert("An error occurred. Please try again.");
          });
      }

      // Call the function to display checkout items on page load
      displayCheckoutItems();
    </script>
  </body>
</html>
