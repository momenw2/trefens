<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/item.css" />
    <title>Document</title>
    <style>
      .quantity-control {
        display: flex;
        align-items: center;
      }
      .quantity-control button {
        width: 30px;
        height: 30px;
        font-size: 20px;
      }
      .quantity-control input {
        width: 50px;
        text-align: center;
        font-size: 16px;
        margin: 0 5px;
      }
    </style>
  </head>
  <body>
    <%- include('partials/header.ejs') -%>

    <div class="itemContainer">
      <div class="itemImg">
        <div style="width: 500px">
          <!-- Container for the HTML slideshow -->
          <div class="imageshow-container" id="imageshow-container">
            <!-- Individual image slides will be inserted here -->
          </div>
          <br />
          <!-- The dots/circles for navigation -->
          <div style="text-align: center" id="dots-container">
            <!-- Dots will be inserted here -->
          </div>
        </div>
      </div>
      <div class="itemData">
        <h2 id="item-name">Item Name</h2>
        <p id="item-description">Item Description</p>
        <div class="itemSizes" id="item-sizes">
          <h3>Select Size:</h3>
          <!-- Sizes will be inserted here -->
        </div>
        <div class="itemPrice">
          <h3>Price : <span id="item-price">0 EGP</span></h3>
        </div>
        <div class="addToCartBox">
          <button id="addToCartBtn" onclick="addToCart()">Add To Cart</button>
        </div>
      </div>
    </div>

    <script>
      // Function to fetch and display item data
      async function fetchItemData() {
        const urlParams = new URLSearchParams(window.location.search);
        const category = urlParams.get("category");
        const name = urlParams.get("name");

        try {
          const response = await fetch(
            `http://localhost:3000/productBCK/item?category=${category}&name=${name}`
          );
          const data = await response.json();

          if (response.ok) {
            displayItemData(data);
          } else {
            console.error("Error fetching item:", data.message);
          }
        } catch (error) {
          console.error("Error fetching item:", error);
        }
      }

      // Function to display item data in the page
      function displayItemData(data) {
        document.getElementById("item-name").textContent = data.name;
        document.getElementById("item-description").textContent =
          data.description;
        document.getElementById("item-price").textContent = `${data.price} EGP`;

        const imagesContainer = document.getElementById("imageshow-container");
        const dotsContainer = document.getElementById("dots-container");

        data.images.forEach((image, index) => {
          const imageDiv = document.createElement("div");
          imageDiv.className = "imageClass fade";
          imageDiv.innerHTML = `<img src="${image}" style="width: 100%" />`;
          imagesContainer.appendChild(imageDiv);

          const dot = document.createElement("span");
          dot.className = "dot";
          dot.onclick = () => currentImage(index + 1);
          dotsContainer.appendChild(dot);
        });

        const sizesContainer = document.getElementById("item-sizes");
        data.sizes.forEach((size) => {
          const input = document.createElement("input");
          input.type = "radio";
          input.id = `size${size}`;
          input.name = "size";
          input.value = size;

          const label = document.createElement("label");
          label.htmlFor = `size${size}`;
          label.textContent = size;

          sizesContainer.appendChild(input);
          sizesContainer.appendChild(label);
        });

        currentImage(1);
      }

      // Function to display the images
      function currentImage(n) {
        var i;
        var images = document.getElementsByClassName("imageClass");
        var dots = document.getElementsByClassName("dot");
        for (i = 0; i < images.length; i++) {
          images[i].style.display = "none";
        }
        for (i = 0; i < dots.length; i++) {
          dots[i].className = dots[i].className.replace(" active", "");
        }
        if (images[n - 1]) {
          images[n - 1].style.display = "block";
          dots[n - 1].className += " active";
        }
      }

      // Function to handle Add To Cart button click
      function addToCart() {
        var addToCartBox = document.querySelector(".addToCartBox");
        addToCartBox.innerHTML = `
        <div class="quantity-control">
          <button onclick="decreaseQuantity()">-</button>
          <input type="number" id="itemQuantity" name="quantity" min="1" value="1" readonly>
          <button onclick="increaseQuantity()">+</button>
        </div>
      `;
      }

      // Function to increase quantity
      function increaseQuantity() {
        var quantityInput = document.getElementById("itemQuantity");
        quantityInput.value = parseInt(quantityInput.value) + 1;
      }

      // Function to decrease quantity
      function decreaseQuantity() {
        var quantityInput = document.getElementById("itemQuantity");
        if (quantityInput.value > 1) {
          quantityInput.value = parseInt(quantityInput.value) - 1;
        }
      }

      fetchItemData();
    </script>
  </body>
</html>
